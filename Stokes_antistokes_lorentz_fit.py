# -*- coding: utf-8 -*-
"""gyandeep+wrk.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pPATytEg6sspmKkFWN3w3r9k1r0jr4Nb
"""

#fitting of Stokes and Antistokes curves of Raman spectra by Lorentz function
import numpy as np 
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

def func(x,a,b,c):
    return c*(a/(((x-b)**2)+((a/2)**2))) 

#Load your text file here
data = np.loadtxt('Py_Stripe_current_3.7A_H_700Oe_mir_5mm_ampl_405nm_ch_1024_with_signal_8_6GHz1.txt')

x = data[:,0]
y = data[:,1]

#colecting the range for first peak (find it from your data set)
x_data=np.zeros(100)
y_data=np.zeros(100)
s=0
for i in range(250,350):
    x_data[s]=x[i]
    y_data[s]=y[i]
    i=i+1
    s=s+1


popt, pcov = curve_fit(func, x_data,y_data)

plt.plot( x, y, '--', markersize=10, label='data' )
plt.plot(x_data, func(x_data,*popt), 'r-',label='fit: a=%5.3f, b=%5.3f, c=%5.3f' % tuple(popt))



print ("parameters",popt)
plt.xlim(-20,20)
plt.ylim(0,1000)
plt.show()

#collecting data for peak 3 ((find it from your data set))
x_data=np.zeros(100)
y_data=np.zeros(100)
s=0
for i in range(100,200):
    x_data[s]=x[i]
    y_data[s]=y[i]
    i=i+1
    s=s+1

popt, pcov = curve_fit(func, x_data,y_data)

plt.plot( x, y, '--', markersize=10, label='data' )
plt.plot(x_data, func(x_data,*popt), 'r-',label='fit: a=%5.3f, b=%5.3f, c=%5.3f' % tuple(popt))



print ("parameters",popt)
plt.xlim(-20,20)
plt.ylim(0,1000)
plt.show()

